apiVersion: v1
kind: Service
metadata:
  name: flaskweb-app-service
  annotations:
    haproxy.router.openshift.io/balance: roundrobin
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: flaskweb-app
    tier: backend
---
apiVersion: v1
kind: Route
metadata:
  annotations:
    openshift.io/host.generated: 'true'
  name: flaskweb-app-route
spec:
  host: flaskweb-app-service-myproject.10.0.75.2.nip.io
  to:
    kind: Service
    name: flaskweb-app-service
    weight: 100
  wildcardPolicy: None
  externalTrafficPolicy: Local
status:
  ingress:
    - conditions:
        - lastTransitionTime: '2018-12-14T19:28:12Z'
          status: 'True'
          type: Admitted
      host: flaskweb-app-service-myproject.10.0.75.2.nip.io
      routerName: router
      wildcardPolicy: None
---
apiVersion: extensions/v1beta1
kind: ReplicaSet
metadata:
 name: flaskweb-app-microservice
 labels:
  app: flaskweb-app
  tier: backend
spec:
 replicas: 3
 selector:
  matchLabels:
    tier: backend
  matchExpressions:
    - {key: tier, operator: In, values: [backend]}
 template:
  metadata:
   labels:
    app: flaskweb-app
    tier: backend
  spec:
   containers:
   - name: flaskweb-app
     image: douglasdb/flaskweb-app
     ports:
     - containerPort: 5000
